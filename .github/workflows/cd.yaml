name: CD

on:
  push:
    branches: [main]
    tags:
      - "*"
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    outputs: 
      imageName: ${{ steps.image_metadata.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOT }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      - name: Image Metadata
        id: image_metadata
        uses: docker/metadata-action@v3
        with:
          flavor: latest=false
          images: quay.io/getdeck/beiboot-rest
          tags: |
            type=raw,value=latest,enable=${{ !startsWith(github.ref, 'refs/tags/') }}
            type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: app/
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.image_metadata.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.image_metadata.outputs.tags }}

  bump-ts-client:
    runs-on: ubuntu-latest
    # needs: publish-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOT }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      - name: Get OpenAPI Schema
        working-directory: ./clients/typescript
        run: docker run --user 0 quay.io/getdeck/beiboot-rest:latest bash -c "python get_openapi.py && cat openapi.json" > openapi_test.json && ls
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Generate and Build
        working-directory: ./clients/typescript
        run: |
          npm ci
          npm run generate-client
          npm run build

